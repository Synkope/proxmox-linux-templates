#!/bin/bash

# NOTE: The VMID may be modified by the script and will be destroyed if it exists
VMID=5250
OS_NAME="debian"
OS_VERSION="13"
OS_CODENAME="trixie"
IMAGE_NAME="${OS_NAME}-${OS_VERSION}-generic-amd64.qcow2"
IMAGE_SIZE="30G"
DOWNLOAD_URL="https://cloud.debian.org/images/cloud/${OS_CODENAME}/latest/$IMAGE_NAME"
CI_USER="$USER"

# Docker-enabled cloud-init configuration
CLOUD_INIT_CONFIG="#cloud-config
runcmd:
    - apt-get update
    - apt-get install -y qemu-guest-agent gnupg ca-certificates curl
    - install -m 0755 -d /etc/apt/keyrings
    - curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
    - chmod a+r /etc/apt/keyrings/docker.asc
    - echo \"deb [arch=\$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \$(. /etc/os-release && echo \"\$VERSION_CODENAME\") stable\" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    - apt-get update
    - apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
    - systemctl enable docker
    - systemctl start docker
    - usermod -aG docker ${CI_USER}
    - reboot"

export CI_USER CLOUD_INIT_CONFIG DOWNLOAD_URL IMAGE_NAME IMAGE_SIZE OS_CODENAME OS_NAME OS_VERSION VMID
